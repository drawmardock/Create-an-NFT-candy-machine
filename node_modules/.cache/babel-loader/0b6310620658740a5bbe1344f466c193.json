{"ast":null,"code":"import _asyncToGenerator from\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import _regeneratorRuntime from\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\";import styled from'styled-components';import Button from'@material-ui/core/Button';import{CircularProgress}from'@material-ui/core';import{GatewayStatus,useGateway}from'@civic/solana-gateway-react';import{useEffect,useState}from'react';import{useConnection,useWallet}from'@solana/wallet-adapter-react';import{findGatewayToken,getGatewayTokenAddressForOwnerAndGatekeeperNetwork,onGatewayTokenChange,removeAccountChangeListener}from'@identity.com/solana-gateway-ts';import{jsx as _jsx}from\"react/jsx-runtime\";export var CTAButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 10px;\\n  margin-bottom: 5px;\\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));// add your own styles here\nexport var MintButton=function MintButton(_ref){var onMint=_ref.onMint,candyMachine=_ref.candyMachine,isMinting=_ref.isMinting,rpcUrl=_ref.rpcUrl,isActive=_ref.isActive;var _useGateway=useGateway(),requestGatewayToken=_useGateway.requestGatewayToken,gatewayStatus=_useGateway.gatewayStatus;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),verified=_useState4[0],setVerified=_useState4[1];var _useState5=useState(-1),_useState6=_slicedToArray(_useState5,2),webSocketSubscriptionId=_useState6[0],setWebSocketSubscriptionId=_useState6[1];var wallet=useWallet();var connection=useConnection();useEffect(function(){var mint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return onMint();case 2:setClicked(false);case 3:case\"end\":return _context.stop();}}},_callee);}));return function mint(){return _ref2.apply(this,arguments);};}();if(gatewayStatus===GatewayStatus.ACTIVE&&clicked){mint();}},[gatewayStatus,clicked,setClicked,onMint]);useEffect(function(){var mint=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return removeAccountChangeListener(connection.connection,webSocketSubscriptionId);case 2:_context2.next=4;return onMint();case 4:setClicked(false);setVerified(false);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function mint(){return _ref3.apply(this,arguments);};}();if(verified&&clicked){mint();}},[verified,clicked,connection.connection,onMint,webSocketSubscriptionId]);var getMintButtonContent=function getMintButtonContent(){if(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isSoldOut){return'SOLD OUT';}else if(isMinting){return/*#__PURE__*/_jsx(CircularProgress,{});}else if(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isPresale||candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isWhitelistOnly){return'WHITELIST MINT';}else if(clicked&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper){return/*#__PURE__*/_jsx(CircularProgress,{});}return'MINT';};return/*#__PURE__*/_jsx(CTAButton,{disabled:clicked||isMinting||!isActive,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var network,gatewayToken,endpoint,gatewayTokenAddress;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setClicked(true);if(!(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper)){_context3.next=36;break;}network=candyMachine.state.gatekeeper.gatekeeperNetwork.toBase58();if(!(network==='ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6')){_context3.next=12;break;}if(!(gatewayStatus===GatewayStatus.ACTIVE)){_context3.next=8;break;}setClicked(true);_context3.next=10;break;case 8:_context3.next=10;return requestGatewayToken();case 10:_context3.next=34;break;case 12:if(!(network==='ttib7tuX8PTWPqFsmUFQTj78MbRhUmqxidJRDv4hRRE'||network==='tibePmPaoTgrs929rWpu755EXaxC7M3SthVCf6GzjZt')){_context3.next=32;break;}_context3.next=15;return findGatewayToken(connection.connection,wallet.publicKey,candyMachine.state.gatekeeper.gatekeeperNetwork);case 15:gatewayToken=_context3.sent;if(!(gatewayToken!==null&&gatewayToken!==void 0&&gatewayToken.isValid())){_context3.next=22;break;}_context3.next=19;return onMint();case 19:setClicked(false);_context3.next=30;break;case 22:endpoint=rpcUrl;if(endpoint.endsWith('/'))endpoint=endpoint.slice(0,-1);if(!endpoint.startsWith('https'))endpoint='https'+endpoint.slice(4);window.open(\"https://verify.encore.fans/?endpoint=\".concat(endpoint,\"&gkNetwork=\").concat(network),'_blank');_context3.next=28;return getGatewayTokenAddressForOwnerAndGatekeeperNetwork(wallet.publicKey,candyMachine.state.gatekeeper.gatekeeperNetwork);case 28:gatewayTokenAddress=_context3.sent;setWebSocketSubscriptionId(onGatewayTokenChange(connection.connection,gatewayTokenAddress,function(){return setVerified(true);},'confirmed'));case 30:_context3.next=34;break;case 32:setClicked(false);throw new Error(\"Unknown Gatekeeper Network: \".concat(network));case 34:_context3.next=39;break;case 36:_context3.next=38;return onMint();case 38:setClicked(false);case 39:case\"end\":return _context3.stop();}}},_callee3);})),variant:\"contained\",children:getMintButtonContent()});};","map":{"version":3,"sources":["/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/src/MintButton.tsx"],"names":["styled","Button","CircularProgress","GatewayStatus","useGateway","useEffect","useState","useConnection","useWallet","findGatewayToken","getGatewayTokenAddressForOwnerAndGatekeeperNetwork","onGatewayTokenChange","removeAccountChangeListener","CTAButton","MintButton","onMint","candyMachine","isMinting","rpcUrl","isActive","requestGatewayToken","gatewayStatus","clicked","setClicked","verified","setVerified","webSocketSubscriptionId","setWebSocketSubscriptionId","wallet","connection","mint","ACTIVE","getMintButtonContent","state","isSoldOut","isPresale","isWhitelistOnly","gatekeeper","network","gatekeeperNetwork","toBase58","publicKey","gatewayToken","isValid","endpoint","endsWith","slice","startsWith","window","open","gatewayTokenAddress","Error"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { CandyMachineAccount } from './candy-machine';\nimport { CircularProgress } from '@material-ui/core';\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\nimport { useEffect, useState } from 'react';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport {\n  findGatewayToken,\n  getGatewayTokenAddressForOwnerAndGatekeeperNetwork,\n  onGatewayTokenChange,\n  removeAccountChangeListener,\n} from '@identity.com/solana-gateway-ts';\n\nexport const CTAButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your own styles here\n\nexport const MintButton = ({\n  onMint,\n  candyMachine,\n  isMinting,\n  rpcUrl,\n  isActive,\n}: {\n  onMint: () => Promise<void>;\n  candyMachine?: CandyMachineAccount;\n  isMinting: boolean;\n  isActive: boolean;\n  rpcUrl: string;\n}) => {\n  const { requestGatewayToken, gatewayStatus } = useGateway();\n  const [clicked, setClicked] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const [webSocketSubscriptionId, setWebSocketSubscriptionId] = useState(-1);\n\n  const wallet = useWallet();\n  const connection = useConnection();\n\n  useEffect(() => {\n    const mint = async () => {\n      await onMint();\n      setClicked(false);\n    };\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\n      mint();\n    }\n  }, [gatewayStatus, clicked, setClicked, onMint]);\n\n  useEffect(() => {\n    const mint = async () => {\n      await removeAccountChangeListener(\n        connection.connection,\n        webSocketSubscriptionId,\n      );\n      await onMint();\n\n      setClicked(false);\n      setVerified(false);\n    };\n    if (verified && clicked) {\n      mint();\n    }\n  }, [\n    verified,\n    clicked,\n    connection.connection,\n    onMint,\n    webSocketSubscriptionId,\n  ]);\n\n  const getMintButtonContent = () => {\n    if (candyMachine?.state.isSoldOut) {\n      return 'SOLD OUT';\n    } else if (isMinting) {\n      return <CircularProgress />;\n    } else if (\n      candyMachine?.state.isPresale ||\n      candyMachine?.state.isWhitelistOnly\n    ) {\n      return 'WHITELIST MINT';\n    } else if (clicked && candyMachine?.state.gatekeeper) {\n      return <CircularProgress />;\n    }\n\n    return 'MINT';\n  };\n\n  return (\n    <CTAButton\n      disabled={clicked || isMinting || !isActive}\n      onClick={async () => {\n        setClicked(true);\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\n          const network =\n            candyMachine.state.gatekeeper.gatekeeperNetwork.toBase58();\n          if (network === 'ignREusXmGrscGNUesoU9mxfds9AiYTezUKex2PsZV6') {\n            if (gatewayStatus === GatewayStatus.ACTIVE) {\n              setClicked(true);\n            } else {\n              await requestGatewayToken();\n            }\n          } else if (\n            network === 'ttib7tuX8PTWPqFsmUFQTj78MbRhUmqxidJRDv4hRRE' ||\n            network === 'tibePmPaoTgrs929rWpu755EXaxC7M3SthVCf6GzjZt'\n          ) {\n            const gatewayToken = await findGatewayToken(\n              connection.connection,\n              wallet.publicKey!,\n              candyMachine.state.gatekeeper.gatekeeperNetwork,\n            );\n\n            if (gatewayToken?.isValid()) {\n              await onMint();\n              setClicked(false);\n            } else {\n              let endpoint = rpcUrl;\n              if (endpoint.endsWith('/')) endpoint = endpoint.slice(0, -1);\n              if (!endpoint.startsWith('https'))\n                endpoint = 'https' + endpoint.slice(4);\n\n              window.open(\n                `https://verify.encore.fans/?endpoint=${endpoint}&gkNetwork=${network}`,\n                '_blank',\n              );\n\n              const gatewayTokenAddress =\n                await getGatewayTokenAddressForOwnerAndGatekeeperNetwork(\n                  wallet.publicKey!,\n                  candyMachine.state.gatekeeper.gatekeeperNetwork,\n                );\n\n              setWebSocketSubscriptionId(\n                onGatewayTokenChange(\n                  connection.connection,\n                  gatewayTokenAddress,\n                  () => setVerified(true),\n                  'confirmed',\n                ),\n              );\n            }\n          } else {\n            setClicked(false);\n            throw new Error(`Unknown Gatekeeper Network: ${network}`);\n          }\n        } else {\n          await onMint();\n          setClicked(false);\n        }\n      }}\n      variant=\"contained\"\n    >\n      {getMintButtonContent()}\n    </CTAButton>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}