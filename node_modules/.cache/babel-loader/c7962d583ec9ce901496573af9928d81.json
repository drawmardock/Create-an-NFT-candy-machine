{"ast":null,"code":"import _objectSpread from\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import _regeneratorRuntime from\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect,useMemo,useState,useCallback}from'react';import*as anchor from'@project-serum/anchor';import styled from'styled-components';import{Container,Snackbar}from'@material-ui/core';import Paper from'@material-ui/core/Paper';import Alert from'@material-ui/lab/Alert';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{PublicKey}from'@solana/web3.js';import{useWallet}from'@solana/wallet-adapter-react';import{WalletDialogButton}from'@solana/wallet-adapter-material-ui';import{awaitTransactionSignatureConfirmation,CANDY_MACHINE_PROGRAM,getCandyMachineState,mintOneToken}from'./candy-machine';import{toDate,formatNumber,getAtaForMint}from'./utils';import{MintCountdown}from'./MintCountdown';import{MintButton}from'./MintButton';import{GatewayProvider}from'@civic/solana-gateway-react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ConnectButton=styled(WalletDialogButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 10px;\\n  margin-bottom: 5px;\\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));var MintContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\"])));// add your owns styles here\nvar Home=function Home(props){var _candyMachine$state,_candyMachine$state2,_candyMachine$state2$;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUserMinting=_useState2[0],setIsUserMinting=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),candyMachine=_useState4[0],setCandyMachine=_useState4[1];var _useState5=useState({open:false,message:'',severity:undefined}),_useState6=_slicedToArray(_useState5,2),alertState=_useState6[0],setAlertState=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isActive=_useState8[0],setIsActive=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),endDate=_useState10[0],setEndDate=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),itemsRemaining=_useState12[0],setItemsRemaining=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isWhitelistUser=_useState14[0],setIsWhitelistUser=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isPresale=_useState16[0],setIsPresale=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),discountPrice=_useState18[0],setDiscountPrice=_useState18[1];var rpcUrl=props.rpcHost;var wallet=useWallet();var anchorWallet=useMemo(function(){if(!wallet||!wallet.publicKey||!wallet.signAllTransactions||!wallet.signTransaction){return;}return{publicKey:wallet.publicKey,signAllTransactions:wallet.signAllTransactions,signTransaction:wallet.signTransaction};},[wallet]);var refreshCandyMachineState=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _cndy$state$goLiveDat,_cndy$state$endSettin,_cndy$state$endSettin2,cndy,active,presale,mint,token,balance,valid,limit;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(anchorWallet){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(!props.candyMachineId){_context.next=43;break;}_context.prev=3;_context.next=6;return getCandyMachineState(anchorWallet,props.candyMachineId,props.connection);case 6:cndy=_context.sent;active=(cndy===null||cndy===void 0?void 0:(_cndy$state$goLiveDat=cndy.state.goLiveDate)===null||_cndy$state$goLiveDat===void 0?void 0:_cndy$state$goLiveDat.toNumber())<new Date().getTime()/1000;presale=false;// whitelist mint?\nif(!(cndy!==null&&cndy!==void 0&&cndy.state.whitelistMintSettings)){_context.next=31;break;}// is it a presale mint?\nif(cndy.state.whitelistMintSettings.presale&&(!cndy.state.goLiveDate||cndy.state.goLiveDate.toNumber()>new Date().getTime()/1000)){presale=true;}// is there a discount?\nif(cndy.state.whitelistMintSettings.discountPrice){setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);}else{setDiscountPrice(undefined);// when presale=false and discountPrice=null, mint is restricted\n// to whitelist users only\nif(!cndy.state.whitelistMintSettings.presale){cndy.state.isWhitelistOnly=true;}}// retrieves the whitelist token\nmint=new anchor.web3.PublicKey(cndy.state.whitelistMintSettings.mint);_context.next=15;return getAtaForMint(mint,anchorWallet.publicKey);case 15:token=_context.sent[0];_context.prev=16;_context.next=19;return props.connection.getTokenAccountBalance(token);case 19:balance=_context.sent;valid=parseInt(balance.value.amount)>0;// only whitelist the user if the balance > 0\nsetIsWhitelistUser(valid);active=presale&&valid||active;_context.next=31;break;case 25:_context.prev=25;_context.t0=_context[\"catch\"](16);setIsWhitelistUser(false);// no whitelist user, no mint\nif(cndy.state.isWhitelistOnly){active=false;}console.log('There was a problem fetching whitelist token balance');console.log(_context.t0);case 31:// datetime to stop the mint?\nif(cndy!==null&&cndy!==void 0&&(_cndy$state$endSettin=cndy.state.endSettings)!==null&&_cndy$state$endSettin!==void 0&&_cndy$state$endSettin.endSettingType.date){setEndDate(toDate(cndy.state.endSettings.number));if(cndy.state.endSettings.number.toNumber()<new Date().getTime()/1000){active=false;}}// amount to stop the mint?\nif(cndy!==null&&cndy!==void 0&&(_cndy$state$endSettin2=cndy.state.endSettings)!==null&&_cndy$state$endSettin2!==void 0&&_cndy$state$endSettin2.endSettingType.amount){limit=Math.min(cndy.state.endSettings.number.toNumber(),cndy.state.itemsAvailable);if(cndy.state.itemsRedeemed<limit){setItemsRemaining(limit-cndy.state.itemsRedeemed);}else{setItemsRemaining(0);cndy.state.isSoldOut=true;}}else{setItemsRemaining(cndy.state.itemsRemaining);}if(cndy.state.isSoldOut){active=false;}setIsActive(cndy.state.isActive=active);setIsPresale(cndy.state.isPresale=presale);setCandyMachine(cndy);_context.next=43;break;case 39:_context.prev=39;_context.t1=_context[\"catch\"](3);console.log('There was a problem fetching Candy Machine state');console.log(_context.t1);case 43:case\"end\":return _context.stop();}}},_callee,null,[[3,39],[16,25]]);})),[anchorWallet,props.candyMachineId,props.connection]);var onMint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _document$getElementB,mintTxId,status,remaining,message;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setIsUserMinting(true);(_document$getElementB=document.getElementById('#identity'))===null||_document$getElementB===void 0?void 0:_document$getElementB.click();if(!(wallet.connected&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.program&&wallet.publicKey)){_context2.next=13;break;}_context2.next=6;return mintOneToken(candyMachine,wallet.publicKey);case 6:mintTxId=_context2.sent[0];status={err:true};if(!mintTxId){_context2.next=12;break;}_context2.next=11;return awaitTransactionSignatureConfirmation(mintTxId,props.txTimeout,props.connection,true);case 11:status=_context2.sent;case 12:if(status&&!status.err){// manual update since the refresh might not detect\n// the change immediately\nremaining=itemsRemaining-1;setItemsRemaining(remaining);setIsActive(candyMachine.state.isActive=remaining>0);candyMachine.state.isSoldOut=remaining===0;setAlertState({open:true,message:'Congratulations! Mint succeeded!',severity:'success'});}else{setAlertState({open:true,message:'Mint failed! Please try again!',severity:'error'});}case 13:_context2.next=21;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](0);message=_context2.t0.msg||'Minting failed! Please try again!';if(!_context2.t0.msg){if(!_context2.t0.message){message='Transaction Timeout! Please try again.';}else if(_context2.t0.message.indexOf('0x137')){message=\"SOLD OUT!\";}else if(_context2.t0.message.indexOf('0x135')){message=\"Insufficient funds to mint. Please fund your wallet.\";}}else{if(_context2.t0.code===311){message=\"SOLD OUT!\";window.location.reload();}else if(_context2.t0.code===312){message=\"Minting period hasn't started yet.\";}}setAlertState({open:true,message:message,severity:'error'});// updates the candy machine state to reflect the lastest\n// information on chain\nrefreshCandyMachineState();case 21:_context2.prev=21;setIsUserMinting(false);return _context2.finish(21);case 24:case\"end\":return _context2.stop();}}},_callee2,null,[[0,15,21,24]]);}));return function onMint(){return _ref2.apply(this,arguments);};}();var toggleMintButton=function toggleMintButton(){var active=!isActive||isPresale;if(active){if(candyMachine.state.isWhitelistOnly&&!isWhitelistUser){active=false;}if(endDate&&Date.now()>=endDate.getTime()){active=false;}}if(isPresale&&candyMachine.state.goLiveDate&&candyMachine.state.goLiveDate.toNumber()<=new Date().getTime()/1000){setIsPresale(candyMachine.state.isPresale=false);}setIsActive(candyMachine.state.isActive=active);};useEffect(function(){refreshCandyMachineState();},[anchorWallet,props.candyMachineId,props.connection,refreshCandyMachineState]);return/*#__PURE__*/_jsxs(Container,{style:{marginTop:100},children:[/*#__PURE__*/_jsx(Container,{maxWidth:\"xs\",style:{position:'relative'},children:/*#__PURE__*/_jsxs(Paper,{style:{padding:24,paddingBottom:10,backgroundColor:'#151A1F',borderRadius:6},children:[!wallet.connected?/*#__PURE__*/_jsx(ConnectButton,{children:\"Connect Wallet\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[candyMachine&&/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"center\",wrap:\"nowrap\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Remaining\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textPrimary\",style:{fontWeight:'bold'},children:\"\".concat(itemsRemaining)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:isWhitelistUser&&discountPrice?'Discount Price':'Price'}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textPrimary\",style:{fontWeight:'bold'},children:isWhitelistUser&&discountPrice?\"\\u25CE \".concat(formatNumber.asNumber(discountPrice)):\"\\u25CE \".concat(formatNumber.asNumber(candyMachine.state.price))})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:5,children:isActive&&endDate&&Date.now()<endDate.getTime()?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MintCountdown,{date:getCountdownDate(candyMachine),style:{justifyContent:'flex-end'},status:\"COMPLETED\",onComplete:toggleMintButton},\"endSettings\"),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{fontWeight:'bold'},children:\"TO END OF MINT\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MintCountdown,{date:getCountdownDate(candyMachine),style:{justifyContent:'flex-end'},status:candyMachine!==null&&candyMachine!==void 0&&(_candyMachine$state=candyMachine.state)!==null&&_candyMachine$state!==void 0&&_candyMachine$state.isSoldOut||endDate&&Date.now()>endDate.getTime()?'COMPLETED':isPresale?'PRESALE':'LIVE',onComplete:toggleMintButton},\"goLive\"),isPresale&&candyMachine.state.goLiveDate&&candyMachine.state.goLiveDate.toNumber()>new Date().getTime()/1000&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{fontWeight:'bold'},children:\"UNTIL PUBLIC MINT\"})]})})]}),/*#__PURE__*/_jsx(MintContainer,{children:candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper&&wallet.publicKey&&wallet.signTransaction?/*#__PURE__*/_jsx(GatewayProvider,{wallet:{publicKey:wallet.publicKey||new PublicKey(CANDY_MACHINE_PROGRAM),//@ts-ignore\nsignTransaction:wallet.signTransaction},gatekeeperNetwork:candyMachine===null||candyMachine===void 0?void 0:(_candyMachine$state2=candyMachine.state)===null||_candyMachine$state2===void 0?void 0:(_candyMachine$state2$=_candyMachine$state2.gatekeeper)===null||_candyMachine$state2$===void 0?void 0:_candyMachine$state2$.gatekeeperNetwork,clusterUrl:rpcUrl,options:{autoShowModal:false},children:/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,onMint:onMint,isActive:isActive||isPresale&&isWhitelistUser,rpcUrl:rpcUrl})}):/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,onMint:onMint,isActive:isActive||isPresale&&isWhitelistUser,rpcUrl:rpcUrl})})]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{marginTop:7,color:'grey'},children:\"Powered by METAPLEX\"})]})}),/*#__PURE__*/_jsx(Snackbar,{open:alertState.open,autoHideDuration:6000,onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},children:/*#__PURE__*/_jsx(Alert,{onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},severity:alertState.severity,children:alertState.message})})]});};var getCountdownDate=function getCountdownDate(candyMachine){var _candyMachine$state$e;if(candyMachine.state.isActive&&(_candyMachine$state$e=candyMachine.state.endSettings)!==null&&_candyMachine$state$e!==void 0&&_candyMachine$state$e.endSettingType.date){return toDate(candyMachine.state.endSettings.number);}return toDate(candyMachine.state.goLiveDate?candyMachine.state.goLiveDate:candyMachine.state.isPresale?new anchor.BN(new Date().getTime()/1000):undefined);};export default Home;","map":{"version":3,"sources":["/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/src/Home.tsx"],"names":["useEffect","useMemo","useState","useCallback","anchor","styled","Container","Snackbar","Paper","Alert","Grid","Typography","PublicKey","useWallet","WalletDialogButton","awaitTransactionSignatureConfirmation","CANDY_MACHINE_PROGRAM","getCandyMachineState","mintOneToken","toDate","formatNumber","getAtaForMint","MintCountdown","MintButton","GatewayProvider","ConnectButton","MintContainer","div","Home","props","isUserMinting","setIsUserMinting","candyMachine","setCandyMachine","open","message","severity","undefined","alertState","setAlertState","isActive","setIsActive","endDate","setEndDate","itemsRemaining","setItemsRemaining","isWhitelistUser","setIsWhitelistUser","isPresale","setIsPresale","discountPrice","setDiscountPrice","rpcUrl","rpcHost","wallet","anchorWallet","publicKey","signAllTransactions","signTransaction","refreshCandyMachineState","candyMachineId","connection","cndy","active","state","goLiveDate","toNumber","Date","getTime","presale","whitelistMintSettings","isWhitelistOnly","mint","web3","token","getTokenAccountBalance","balance","valid","parseInt","value","amount","console","log","endSettings","endSettingType","date","number","limit","Math","min","itemsAvailable","itemsRedeemed","isSoldOut","onMint","document","getElementById","click","connected","program","mintTxId","status","err","txTimeout","remaining","msg","indexOf","code","window","location","reload","toggleMintButton","now","marginTop","position","padding","paddingBottom","backgroundColor","borderRadius","fontWeight","asNumber","price","getCountdownDate","justifyContent","gatekeeper","gatekeeperNetwork","autoShowModal","color","BN"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState, useCallback } from 'react';\nimport * as anchor from '@project-serum/anchor';\n\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { PublicKey } from '@solana/web3.js';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport {\n  awaitTransactionSignatureConfirmation,\n  CandyMachineAccount,\n  CANDY_MACHINE_PROGRAM,\n  getCandyMachineState,\n  mintOneToken,\n} from './candy-machine';\nimport { AlertState, toDate, formatNumber, getAtaForMint } from './utils';\nimport { MintCountdown } from './MintCountdown';\nimport { MintButton } from './MintButton';\nimport { GatewayProvider } from '@civic/solana-gateway-react';\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div``; // add your owns styles here\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n}\n\nconst Home = (props: HomeProps) => {\n  const [isUserMinting, setIsUserMinting] = useState(false);\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n  const [isActive, setIsActive] = useState(false);\n  const [endDate, setEndDate] = useState<Date>();\n  const [itemsRemaining, setItemsRemaining] = useState<number>();\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\n  const [isPresale, setIsPresale] = useState(false);\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const refreshCandyMachineState = useCallback(async () => {\n    if (!anchorWallet) {\n      return;\n    }\n\n    if (props.candyMachineId) {\n      try {\n        const cndy = await getCandyMachineState(\n          anchorWallet,\n          props.candyMachineId,\n          props.connection,\n        );\n        let active =\n          cndy?.state.goLiveDate?.toNumber() < new Date().getTime() / 1000;\n        let presale = false;\n        // whitelist mint?\n        if (cndy?.state.whitelistMintSettings) {\n          // is it a presale mint?\n          if (\n            cndy.state.whitelistMintSettings.presale &&\n            (!cndy.state.goLiveDate ||\n              cndy.state.goLiveDate.toNumber() > new Date().getTime() / 1000)\n          ) {\n            presale = true;\n          }\n          // is there a discount?\n          if (cndy.state.whitelistMintSettings.discountPrice) {\n            setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);\n          } else {\n            setDiscountPrice(undefined);\n            // when presale=false and discountPrice=null, mint is restricted\n            // to whitelist users only\n            if (!cndy.state.whitelistMintSettings.presale) {\n              cndy.state.isWhitelistOnly = true;\n            }\n          }\n          // retrieves the whitelist token\n          const mint = new anchor.web3.PublicKey(\n            cndy.state.whitelistMintSettings.mint,\n          );\n          const token = (await getAtaForMint(mint, anchorWallet.publicKey))[0];\n\n          try {\n            const balance = await props.connection.getTokenAccountBalance(\n              token,\n            );\n            let valid = parseInt(balance.value.amount) > 0;\n            // only whitelist the user if the balance > 0\n            setIsWhitelistUser(valid);\n            active = (presale && valid) || active;\n          } catch (e) {\n            setIsWhitelistUser(false);\n            // no whitelist user, no mint\n            if (cndy.state.isWhitelistOnly) {\n              active = false;\n            }\n            console.log('There was a problem fetching whitelist token balance');\n            console.log(e);\n          }\n        }\n        // datetime to stop the mint?\n        if (cndy?.state.endSettings?.endSettingType.date) {\n          setEndDate(toDate(cndy.state.endSettings.number));\n          if (\n            cndy.state.endSettings.number.toNumber() <\n            new Date().getTime() / 1000\n          ) {\n            active = false;\n          }\n        }\n        // amount to stop the mint?\n        if (cndy?.state.endSettings?.endSettingType.amount) {\n          let limit = Math.min(\n            cndy.state.endSettings.number.toNumber(),\n            cndy.state.itemsAvailable,\n          );\n          if (cndy.state.itemsRedeemed < limit) {\n            setItemsRemaining(limit - cndy.state.itemsRedeemed);\n          } else {\n            setItemsRemaining(0);\n            cndy.state.isSoldOut = true;\n          }\n        } else {\n          setItemsRemaining(cndy.state.itemsRemaining);\n        }\n\n        if (cndy.state.isSoldOut) {\n          active = false;\n        }\n\n        setIsActive((cndy.state.isActive = active));\n        setIsPresale((cndy.state.isPresale = presale));\n        setCandyMachine(cndy);\n      } catch (e) {\n        console.log('There was a problem fetching Candy Machine state');\n        console.log(e);\n      }\n    }\n  }, [anchorWallet, props.candyMachineId, props.connection]);\n\n  const onMint = async () => {\n    try {\n      setIsUserMinting(true);\n      document.getElementById('#identity')?.click();\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        const mintTxId = (\n          await mintOneToken(candyMachine, wallet.publicKey)\n        )[0];\n\n        let status: any = { err: true };\n        if (mintTxId) {\n          status = await awaitTransactionSignatureConfirmation(\n            mintTxId,\n            props.txTimeout,\n            props.connection,\n            true,\n          );\n        }\n\n        if (status && !status.err) {\n          // manual update since the refresh might not detect\n          // the change immediately\n          let remaining = itemsRemaining! - 1;\n          setItemsRemaining(remaining);\n          setIsActive((candyMachine.state.isActive = remaining > 0));\n          candyMachine.state.isSoldOut = remaining === 0;\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success',\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error',\n          });\n        }\n      }\n    } catch (error: any) {\n      let message = error.msg || 'Minting failed! Please try again!';\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction Timeout! Please try again.';\n        } else if (error.message.indexOf('0x137')) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: 'error',\n      });\n      // updates the candy machine state to reflect the lastest\n      // information on chain\n      refreshCandyMachineState();\n    } finally {\n      setIsUserMinting(false);\n    }\n  };\n\n  const toggleMintButton = () => {\n    let active = !isActive || isPresale;\n\n    if (active) {\n      if (candyMachine!.state.isWhitelistOnly && !isWhitelistUser) {\n        active = false;\n      }\n      if (endDate && Date.now() >= endDate.getTime()) {\n        active = false;\n      }\n    }\n\n    if (\n      isPresale &&\n      candyMachine!.state.goLiveDate &&\n      candyMachine!.state.goLiveDate.toNumber() <= new Date().getTime() / 1000\n    ) {\n      setIsPresale((candyMachine!.state.isPresale = false));\n    }\n\n    setIsActive((candyMachine!.state.isActive = active));\n  };\n\n  useEffect(() => {\n    refreshCandyMachineState();\n  }, [\n    anchorWallet,\n    props.candyMachineId,\n    props.connection,\n    refreshCandyMachineState,\n  ]);\n\n  return (\n    <Container style={{ marginTop: 100 }}>\n      <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\n        <Paper\n          style={{\n            padding: 24,\n            paddingBottom: 10,\n            backgroundColor: '#151A1F',\n            borderRadius: 6,\n          }}\n        >\n          {!wallet.connected ? (\n            <ConnectButton>Connect Wallet</ConnectButton>\n          ) : (\n            <>\n              {candyMachine && (\n                <Grid\n                  container\n                  direction=\"row\"\n                  justifyContent=\"center\"\n                  wrap=\"nowrap\"\n                >\n                  <Grid item xs={3}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      Remaining\n                    </Typography>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                      style={{\n                        fontWeight: 'bold',\n                      }}\n                    >\n                      {`${itemsRemaining}`}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {isWhitelistUser && discountPrice\n                        ? 'Discount Price'\n                        : 'Price'}\n                    </Typography>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                      style={{ fontWeight: 'bold' }}\n                    >\n                      {isWhitelistUser && discountPrice\n                        ? `◎ ${formatNumber.asNumber(discountPrice)}`\n                        : `◎ ${formatNumber.asNumber(\n                            candyMachine.state.price,\n                          )}`}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={5}>\n                    {isActive && endDate && Date.now() < endDate.getTime() ? (\n                      <>\n                        <MintCountdown\n                          key=\"endSettings\"\n                          date={getCountdownDate(candyMachine)}\n                          style={{ justifyContent: 'flex-end' }}\n                          status=\"COMPLETED\"\n                          onComplete={toggleMintButton}\n                        />\n                        <Typography\n                          variant=\"caption\"\n                          align=\"center\"\n                          display=\"block\"\n                          style={{ fontWeight: 'bold' }}\n                        >\n                          TO END OF MINT\n                        </Typography>\n                      </>\n                    ) : (\n                      <>\n                        <MintCountdown\n                          key=\"goLive\"\n                          date={getCountdownDate(candyMachine)}\n                          style={{ justifyContent: 'flex-end' }}\n                          status={\n                            candyMachine?.state?.isSoldOut ||\n                            (endDate && Date.now() > endDate.getTime())\n                              ? 'COMPLETED'\n                              : isPresale\n                              ? 'PRESALE'\n                              : 'LIVE'\n                          }\n                          onComplete={toggleMintButton}\n                        />\n                        {isPresale &&\n                          candyMachine.state.goLiveDate &&\n                          candyMachine.state.goLiveDate.toNumber() >\n                            new Date().getTime() / 1000 && (\n                            <Typography\n                              variant=\"caption\"\n                              align=\"center\"\n                              display=\"block\"\n                              style={{ fontWeight: 'bold' }}\n                            >\n                              UNTIL PUBLIC MINT\n                            </Typography>\n                          )}\n                      </>\n                    )}\n                  </Grid>\n                </Grid>\n              )}\n              <MintContainer>\n                {candyMachine?.state.isActive &&\n                candyMachine?.state.gatekeeper &&\n                wallet.publicKey &&\n                wallet.signTransaction ? (\n                  <GatewayProvider\n                    wallet={{\n                      publicKey:\n                        wallet.publicKey ||\n                        new PublicKey(CANDY_MACHINE_PROGRAM),\n                      //@ts-ignore\n                      signTransaction: wallet.signTransaction,\n                    }}\n                    gatekeeperNetwork={\n                      candyMachine?.state?.gatekeeper?.gatekeeperNetwork\n                    }\n                    clusterUrl={rpcUrl}\n                    options={{ autoShowModal: false }}\n                  >\n                    <MintButton\n                      candyMachine={candyMachine}\n                      isMinting={isUserMinting}\n                      onMint={onMint}\n                      isActive={isActive || (isPresale && isWhitelistUser)}\n                      rpcUrl={rpcUrl}\n                    />\n                  </GatewayProvider>\n                ) : (\n                  <MintButton\n                    candyMachine={candyMachine}\n                    isMinting={isUserMinting}\n                    onMint={onMint}\n                    isActive={isActive || (isPresale && isWhitelistUser)}\n                    rpcUrl={rpcUrl}\n                  />\n                )}\n              </MintContainer>\n            </>\n          )}\n          <Typography\n            variant=\"caption\"\n            align=\"center\"\n            display=\"block\"\n            style={{ marginTop: 7, color: 'grey' }}\n          >\n            Powered by METAPLEX\n          </Typography>\n        </Paper>\n      </Container>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nconst getCountdownDate = (\n  candyMachine: CandyMachineAccount,\n): Date | undefined => {\n  if (\n    candyMachine.state.isActive &&\n    candyMachine.state.endSettings?.endSettingType.date\n  ) {\n    return toDate(candyMachine.state.endSettings.number);\n  }\n\n  return toDate(\n    candyMachine.state.goLiveDate\n      ? candyMachine.state.goLiveDate\n      : candyMachine.state.isPresale\n      ? new anchor.BN(new Date().getTime() / 1000)\n      : undefined,\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}