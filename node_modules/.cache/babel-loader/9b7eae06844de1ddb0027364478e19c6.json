{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = require(\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _defineProperty = require(\"/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _gatewayStatusToCivic, _validationProcessToG;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = void 0;\n\nvar react_1 = require(\"react\");\n\nvar logger_1 = __importDefault(require(\"../logger\"));\n\nvar types_1 = require(\"../types\");\n\nvar config_1 = require(\"../config\");\n\nvar utils_1 = require(\"../useReducer/utils\");\n\nvar gatewayStatusToCivicPassAction = (_gatewayStatusToCivic = {}, _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP, types_1.CivicPassMessageAction.PROOF_OF_WALLET_OWNERSHIP), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.IN_REVIEW, types_1.CivicPassMessageAction.TOKEN_IN_REVIEW), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.ERROR, types_1.CivicPassMessageAction.ISSUANCE), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.ACTIVE, types_1.CivicPassMessageAction.TOKEN_ACTIVE), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.REVOKED, types_1.CivicPassMessageAction.TOKEN_REVOKED), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.FROZEN, types_1.CivicPassMessageAction.TOKEN_FROZEN), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.REJECTED, types_1.CivicPassMessageAction.TOKEN_REJECTED), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.LOCATION_NOT_SUPPORTED, types_1.CivicPassMessageAction.FAILED_IP_CHECK), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.REFRESH_TOKEN_REQUIRED, types_1.CivicPassMessageAction.REFRESH), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.CHECKING, types_1.CivicPassMessageAction.STATUS), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.NOT_REQUESTED, types_1.CivicPassMessageAction.ISSUANCE), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.COLLECTING_USER_INFORMATION, types_1.CivicPassMessageAction.ISSUANCE), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.VALIDATING_USER_INFORMATION, types_1.CivicPassMessageAction.ISSUANCE), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.USER_INFORMATION_VALIDATED, types_1.CivicPassMessageAction.ISSUANCE), _defineProperty(_gatewayStatusToCivic, types_1.GatewayStatus.USER_INFORMATION_REJECTED, types_1.CivicPassMessageAction.ISSUANCE), _gatewayStatusToCivic);\nvar validationProcessToGatewayStatus = (_validationProcessToG = {}, _defineProperty(_validationProcessToG, types_1.ValidationStatus.COLLECTING, types_1.GatewayStatus.COLLECTING_USER_INFORMATION), _defineProperty(_validationProcessToG, types_1.ValidationStatus.PROCESSING, types_1.GatewayStatus.VALIDATING_USER_INFORMATION), _defineProperty(_validationProcessToG, types_1.ValidationStatus.IN_REVIEW, types_1.GatewayStatus.VALIDATING_USER_INFORMATION), _defineProperty(_validationProcessToG, types_1.ValidationStatus.FAILED, types_1.GatewayStatus.USER_INFORMATION_REJECTED), _defineProperty(_validationProcessToG, types_1.ValidationStatus.NOT_FOUND, types_1.GatewayStatus.NOT_REQUESTED), _defineProperty(_validationProcessToG, types_1.ValidationStatus.COMPLETED, types_1.GatewayStatus.USER_INFORMATION_VALIDATED), _validationProcessToG);\n\nvar logDebug = function logDebug(message) {\n  var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return logger_1.default.debug(\"[useCivicPass] \".concat(message), obj);\n};\n\nvar logError = function logError(message) {\n  var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return logger_1.default.error(\"[useCivicPass] \".concat(message), obj);\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\nvar getCivicPassSrcUrl = function getCivicPassSrcUrl(state, status) {\n  var redirectUrl = state.redirectUrl,\n      gatekeeperNetworkAddress = state.gatekeeperNetworkAddress,\n      stage = state.stage,\n      walletAddress = state.walletAddress,\n      civicPass = state.civicPass,\n      chainType = state.chainType;\n\n  if (!gatekeeperNetworkAddress || !walletAddress) {\n    logError('Required properties not present', {\n      gatekeeperNetworkAddress: gatekeeperNetworkAddress,\n      walletAddress: walletAddress\n    });\n    throw new Error(\"Required properties not present \".concat({\n      gatekeeperNetworkAddress: gatekeeperNetworkAddress,\n      walletAddress: walletAddress\n    }));\n  }\n\n  var civicPassSrcUrl = (0, config_1.getCivicPassEndpoint)(stage);\n  var url = new URL(civicPassSrcUrl);\n  var action = gatewayStatusToCivicPassAction[status];\n  var searchParams = new URLSearchParams(Object.assign(Object.assign({}, civicPass.requestPayload), {\n    redirectUrl: redirectUrl,\n    networkAddress: gatekeeperNetworkAddress,\n    action: action,\n    wallet: walletAddress,\n    chain: chainType\n  }));\n  logDebug('Civic pass query params', {\n    searchParams: searchParams.toString(),\n    gatewayStatus: types_1.GatewayStatus[status]\n  });\n  return \"\".concat(url.href, \"?\").concat(searchParams.toString());\n};\n\nvar reducer = function reducer(state, action) {\n  var _a;\n\n  switch (action.type) {\n    case 'civicPass_check_token_status':\n      {\n        return Object.assign(Object.assign({}, state), {\n          tokenRequested: true,\n          iframeMinimized: !((_a = state.options) === null || _a === void 0 ? void 0 : _a.autoShowModal),\n          renderIframe: true,\n          iframeSrcUrl: state.civicPass.status === types_1.CivicPassIssuanceStatus.REQUESTED ? state.iframeSrcUrl : getCivicPassSrcUrl(state, (0, utils_1.statusFromToken)(state, action.token))\n        });\n      }\n\n    case 'civicPass_check_status':\n      {\n        return Object.assign(Object.assign({}, state), {\n          iframeMinimized: true,\n          renderIframe: true,\n          gatewayStatus: types_1.GatewayStatus.CHECKING,\n          iframeSrcUrl: getCivicPassSrcUrl(state, types_1.GatewayStatus.CHECKING)\n        });\n      }\n\n    case 'civicPass_check_status_complete':\n      {\n        var payload = action.payload.payload;\n        var status = payload.status;\n        var gatewayStatus = validationProcessToGatewayStatus[status];\n        return Object.assign(Object.assign({}, state), {\n          iframeMinimized: true,\n          renderIframe: false,\n          gatewayStatus: gatewayStatus\n        });\n      }\n\n    case 'userInteraction_check_gatewayToken_status':\n      {\n        return Object.assign(Object.assign({}, state), {\n          tokenRequested: true,\n          iframeMinimized: false,\n          renderIframe: true,\n          iframeSrcUrl: state.civicPass.status === types_1.CivicPassIssuanceStatus.REQUESTED ? state.iframeSrcUrl : getCivicPassSrcUrl(state, (0, utils_1.statusFromToken)(state, action.token))\n        });\n      }\n\n    case 'civicPass_close':\n      return Object.assign({}, state.civicPass.status === types_1.CivicPassIssuanceStatus.REQUESTED ? Object.assign(Object.assign({}, state), {\n        iframeMinimized: true,\n        renderIframe: true\n      }) : Object.assign(Object.assign({}, state), {\n        iframeMinimized: true,\n        renderIframe: false\n      }));\n\n    case 'civicPass_in_progress':\n      {\n        return Object.assign(Object.assign({}, state), {\n          gatewayStatus: types_1.GatewayStatus.COLLECTING_USER_INFORMATION,\n          renderIframe: true,\n          iframeMinimized: false,\n          civicPass: Object.assign(Object.assign({}, state.civicPass), {\n            status: types_1.CivicPassIssuanceStatus.REQUESTED\n          })\n        });\n      }\n\n    case 'civicPass_issuance_success':\n      {\n        var _action$payload = action.payload,\n            _payload = _action$payload.payload,\n            requiresProofOfWalletOwnership = _action$payload.requiresProofOfWalletOwnership;\n\n        var _gatewayStatus = requiresProofOfWalletOwnership ? types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP : types_1.GatewayStatus.IN_REVIEW;\n\n        return Object.assign(Object.assign({}, state), {\n          gatewayStatus: _gatewayStatus,\n          renderIframe: true,\n          iframeMinimized: false,\n          powoRequested: 'solana',\n          iframeSrcUrl: getCivicPassSrcUrl(state, _gatewayStatus),\n          civicPass: Object.assign(Object.assign({}, state.civicPass), {\n            status: types_1.CivicPassIssuanceStatus.VERIFIED,\n            responsePayload: _defineProperty({}, types_1.CivicPassMessageAction.ISSUANCE, {\n              payload: _payload,\n              requiresProofOfWalletOwnership: requiresProofOfWalletOwnership\n            })\n          })\n        });\n      }\n\n    case 'civicPass_issuance_failure':\n      return Object.assign(Object.assign({}, (0, utils_1.resetState)(state)), {\n        gatewayStatus: types_1.GatewayStatus.ERROR\n      });\n\n    case 'civicPass_issuance_cancelled':\n      return Object.assign(Object.assign({}, (0, utils_1.resetState)(state)), {\n        gatewayStatus: types_1.GatewayStatus.NOT_REQUESTED\n      });\n\n    case 'civicPass_refresh_success':\n      {\n        var _action$payload2 = action.payload,\n            _payload2 = _action$payload2.payload,\n            _requiresProofOfWalletOwnership = _action$payload2.requiresProofOfWalletOwnership;\n\n        var _gatewayStatus2 = _requiresProofOfWalletOwnership ? types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP : types_1.GatewayStatus.IN_REVIEW;\n\n        return Object.assign(Object.assign({}, state), {\n          gatewayStatus: _gatewayStatus2,\n          renderIframe: true,\n          iframeMinimized: false,\n          iframeSrcUrl: getCivicPassSrcUrl(state, _gatewayStatus2),\n          refreshTokenState: types_1.RefreshTokenState.IN_PROGRESS,\n          civicPass: Object.assign(Object.assign({}, state.civicPass), {\n            responsePayload: _defineProperty({}, types_1.CivicPassMessageAction.REFRESH, {\n              payload: _payload2,\n              requiresProofOfWalletOwnership: _requiresProofOfWalletOwnership\n            })\n          })\n        });\n      }\n\n    case 'civicPass_refresh_cancelled':\n      return Object.assign(Object.assign({}, (0, utils_1.resetState)(state)), {\n        refreshTokenState: types_1.RefreshTokenState.CANCELLED,\n        gatewayStatus: types_1.GatewayStatus.REFRESH_TOKEN_REQUIRED\n      });\n\n    case 'civicPass_refresh_failure':\n      return Object.assign(Object.assign({}, (0, utils_1.resetState)(state)), {\n        refreshTokenState: types_1.RefreshTokenState.FAILED,\n        gatewayStatus: types_1.GatewayStatus.ERROR\n      });\n\n    case 'civicPass_location_not_supported':\n      return Object.assign(Object.assign({}, state), {\n        iframeMinimized: true,\n        renderIframe: false,\n        gatewayStatus: state.gatewayStatus,\n        refreshTokenState: state.gatekeeperRecordState === types_1.GatekeeperRecordState.ISSUED_LOCATION_NOT_SUPPORTED ? types_1.RefreshTokenState.REQUIRES_POWO : state.refreshTokenState\n      });\n\n    default:\n      return state;\n  }\n};\n\nexports.reducer = reducer;\n\nvar useCivicPass = function useCivicPass(_ref, state, dispatch) {\n  var wallet = _ref.wallet;\n  var gatekeeperRecordState = state.gatekeeperRecordState;\n\n  var getActionForIssuanceResponse = function getActionForIssuanceResponse(response) {\n    var _actions;\n\n    var actions = (_actions = {}, _defineProperty(_actions, types_1.CivicPassMessageEventResult.SUCCESS, {\n      type: 'civicPass_issuance_success',\n      payload: response\n    }), _defineProperty(_actions, types_1.CivicPassMessageEventResult.FAILURE, {\n      type: 'civicPass_issuance_failure'\n    }), _defineProperty(_actions, types_1.CivicPassMessageEventResult.CANCELLED, {\n      type: 'civicPass_issuance_cancelled'\n    }), _defineProperty(_actions, types_1.CivicPassMessageEventResult.IN_PROGRESS, {\n      type: 'civicPass_in_progress'\n    }), _actions);\n    return actions[response.event];\n  };\n\n  var getActionForRefreshResponse = function getActionForRefreshResponse(response) {\n    var _actions2;\n\n    var actions = (_actions2 = {}, _defineProperty(_actions2, types_1.CivicPassMessageEventResult.SUCCESS, {\n      type: 'civicPass_refresh_success',\n      payload: response\n    }), _defineProperty(_actions2, types_1.CivicPassMessageEventResult.CANCELLED, {\n      type: 'civicPass_refresh_cancelled'\n    }), _defineProperty(_actions2, types_1.CivicPassMessageEventResult.FAILURE, {\n      type: 'civicPass_refresh_failure'\n    }), _actions2);\n    return actions[response.event];\n  };\n\n  var getActionForPowoResponse = function getActionForPowoResponse(response) {\n    var actions = _defineProperty({}, types_1.CivicPassMessageEventResult.SUCCESS, {\n      type: 'powoComplete'\n    });\n\n    return actions[response.event];\n  };\n\n  var getActionForLocationNotSupportedResponse = function getActionForLocationNotSupportedResponse(response) {\n    var actions = _defineProperty({}, types_1.CivicPassMessageEventResult.SUCCESS, {\n      type: 'civicPass_location_not_supported'\n    });\n\n    return actions[response.event];\n  };\n\n  var getActionForStaticResponse = function getActionForStaticResponse(response) {\n    var actions = _defineProperty({}, types_1.CivicPassMessageEventResult.SUCCESS, {\n      type: 'civicPass_close'\n    });\n\n    return actions[response.event];\n  };\n\n  var getActionForStatusResponse = function getActionForStatusResponse(response) {\n    var actions = _defineProperty({}, types_1.CivicPassMessageEventResult.SUCCESS, {\n      type: 'civicPass_check_status_complete',\n      payload: response\n    });\n\n    return actions[response.event];\n  };\n\n  var dispatchComplianceEventResult = function dispatchComplianceEventResult(response) {\n    var _actions7;\n\n    var actions = (_actions7 = {}, _defineProperty(_actions7, types_1.CivicPassMessageAction.ISSUANCE, getActionForIssuanceResponse(response)), _defineProperty(_actions7, types_1.CivicPassMessageAction.PROOF_OF_WALLET_OWNERSHIP, getActionForPowoResponse(response)), _defineProperty(_actions7, types_1.CivicPassMessageAction.TOKEN_IN_REVIEW, getActionForStaticResponse(response)), _defineProperty(_actions7, types_1.CivicPassMessageAction.TOKEN_ACTIVE, getActionForStaticResponse(response)), _defineProperty(_actions7, types_1.CivicPassMessageAction.TOKEN_FROZEN, getActionForStaticResponse(response)), _defineProperty(_actions7, types_1.CivicPassMessageAction.TOKEN_REJECTED, getActionForStaticResponse(response)), _defineProperty(_actions7, types_1.CivicPassMessageAction.TOKEN_REVOKED, getActionForStaticResponse(response)), _defineProperty(_actions7, types_1.CivicPassMessageAction.FAILED_IP_CHECK, getActionForLocationNotSupportedResponse(response)), _defineProperty(_actions7, types_1.CivicPassMessageAction.REFRESH, getActionForRefreshResponse(response)), _defineProperty(_actions7, types_1.CivicPassMessageAction.STATUS, getActionForStatusResponse(response)), _actions7);\n    var action = actions[response.action];\n\n    if (action) {\n      logDebug('Successfully processed compliance event with action', action);\n      dispatch(action);\n    }\n  };\n  /**\n   * Listen for post messages from the compliance iframe and dispatch events\n   * based on the event type\n   */\n\n\n  (0, react_1.useEffect)(function () {\n    if (wallet && wallet.publicKey) {\n      logDebug('Current state', state);\n\n      var handler = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  dispatchComplianceEventResult(response.data);\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function handler(_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      window.addEventListener('message', handler);\n      return function () {\n        logDebug('Removing event listener for compliance');\n        return window.removeEventListener('message', handler);\n      };\n    }\n\n    return function () {};\n  }, []);\n  /**\n   * We do not have a token and user is connecting from an unsupported country,\n   * so we show the country not supported screen\n   */\n\n  (0, react_1.useEffect)(function () {\n    if (gatekeeperRecordState === types_1.GatekeeperRecordState.LOCATION_NOT_SUPPORTED) {\n      dispatch({\n        type: 'civicPass_check_token_status'\n      });\n    }\n  }, [gatekeeperRecordState]);\n  /**\n   * Check for the ongoing KYC status\n   */\n\n  (0, react_1.useEffect)(function () {\n    if (gatekeeperRecordState === types_1.GatekeeperRecordState.NOT_REQUESTED) {\n      dispatch({\n        type: 'civicPass_check_status'\n      });\n    }\n  }, [gatekeeperRecordState]);\n  return {\n    dispatchComplianceEventResult: dispatchComplianceEventResult\n  };\n};\n\nexports.default = useCivicPass;","map":{"version":3,"sources":["/home/drawmardock/Desktop/dapp/solana-nft/metaplex/js/packages/candy-machine-ui/node_modules/@civic/solana-gateway-react/dist/esm/useHooks/useCivicPass.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","reducer","react_1","require","logger_1","types_1","config_1","utils_1","gatewayStatusToCivicPassAction","GatewayStatus","PROOF_OF_WALLET_OWNERSHIP","CivicPassMessageAction","IN_REVIEW","TOKEN_IN_REVIEW","ERROR","ISSUANCE","ACTIVE","TOKEN_ACTIVE","REVOKED","TOKEN_REVOKED","FROZEN","TOKEN_FROZEN","REJECTED","TOKEN_REJECTED","LOCATION_NOT_SUPPORTED","FAILED_IP_CHECK","REFRESH_TOKEN_REQUIRED","REFRESH","CHECKING","STATUS","NOT_REQUESTED","COLLECTING_USER_INFORMATION","VALIDATING_USER_INFORMATION","USER_INFORMATION_VALIDATED","USER_INFORMATION_REJECTED","validationProcessToGatewayStatus","ValidationStatus","COLLECTING","PROCESSING","FAILED","NOT_FOUND","COMPLETED","logDebug","message","obj","default","debug","logError","error","getCivicPassSrcUrl","state","status","redirectUrl","gatekeeperNetworkAddress","stage","walletAddress","civicPass","chainType","Error","civicPassSrcUrl","getCivicPassEndpoint","url","URL","action","searchParams","URLSearchParams","assign","requestPayload","networkAddress","wallet","chain","toString","gatewayStatus","href","_a","type","tokenRequested","iframeMinimized","options","autoShowModal","renderIframe","iframeSrcUrl","CivicPassIssuanceStatus","REQUESTED","statusFromToken","token","payload","requiresProofOfWalletOwnership","powoRequested","VERIFIED","responsePayload","resetState","refreshTokenState","RefreshTokenState","IN_PROGRESS","CANCELLED","gatekeeperRecordState","GatekeeperRecordState","ISSUED_LOCATION_NOT_SUPPORTED","REQUIRES_POWO","useCivicPass","dispatch","getActionForIssuanceResponse","response","actions","CivicPassMessageEventResult","SUCCESS","FAILURE","event","getActionForRefreshResponse","getActionForPowoResponse","getActionForLocationNotSupportedResponse","getActionForStaticResponse","getActionForStatusResponse","dispatchComplianceEventResult","useEffect","publicKey","handler","data","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reducer = void 0;\nconst react_1 = require(\"react\");\nconst logger_1 = __importDefault(require(\"../logger\"));\nconst types_1 = require(\"../types\");\nconst config_1 = require(\"../config\");\nconst utils_1 = require(\"../useReducer/utils\");\nconst gatewayStatusToCivicPassAction = {\n    [types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP]: types_1.CivicPassMessageAction.PROOF_OF_WALLET_OWNERSHIP,\n    [types_1.GatewayStatus.IN_REVIEW]: types_1.CivicPassMessageAction.TOKEN_IN_REVIEW,\n    [types_1.GatewayStatus.ERROR]: types_1.CivicPassMessageAction.ISSUANCE,\n    [types_1.GatewayStatus.ACTIVE]: types_1.CivicPassMessageAction.TOKEN_ACTIVE,\n    [types_1.GatewayStatus.REVOKED]: types_1.CivicPassMessageAction.TOKEN_REVOKED,\n    [types_1.GatewayStatus.FROZEN]: types_1.CivicPassMessageAction.TOKEN_FROZEN,\n    [types_1.GatewayStatus.REJECTED]: types_1.CivicPassMessageAction.TOKEN_REJECTED,\n    [types_1.GatewayStatus.LOCATION_NOT_SUPPORTED]: types_1.CivicPassMessageAction.FAILED_IP_CHECK,\n    [types_1.GatewayStatus.REFRESH_TOKEN_REQUIRED]: types_1.CivicPassMessageAction.REFRESH,\n    [types_1.GatewayStatus.CHECKING]: types_1.CivicPassMessageAction.STATUS,\n    [types_1.GatewayStatus.NOT_REQUESTED]: types_1.CivicPassMessageAction.ISSUANCE,\n    [types_1.GatewayStatus.COLLECTING_USER_INFORMATION]: types_1.CivicPassMessageAction.ISSUANCE,\n    [types_1.GatewayStatus.VALIDATING_USER_INFORMATION]: types_1.CivicPassMessageAction.ISSUANCE,\n    [types_1.GatewayStatus.USER_INFORMATION_VALIDATED]: types_1.CivicPassMessageAction.ISSUANCE,\n    [types_1.GatewayStatus.USER_INFORMATION_REJECTED]: types_1.CivicPassMessageAction.ISSUANCE,\n};\nconst validationProcessToGatewayStatus = {\n    [types_1.ValidationStatus.COLLECTING]: types_1.GatewayStatus.COLLECTING_USER_INFORMATION,\n    [types_1.ValidationStatus.PROCESSING]: types_1.GatewayStatus.VALIDATING_USER_INFORMATION,\n    [types_1.ValidationStatus.IN_REVIEW]: types_1.GatewayStatus.VALIDATING_USER_INFORMATION,\n    [types_1.ValidationStatus.FAILED]: types_1.GatewayStatus.USER_INFORMATION_REJECTED,\n    [types_1.ValidationStatus.NOT_FOUND]: types_1.GatewayStatus.NOT_REQUESTED,\n    [types_1.ValidationStatus.COMPLETED]: types_1.GatewayStatus.USER_INFORMATION_VALIDATED,\n};\nconst logDebug = (message, obj = null) => logger_1.default.debug(`[useCivicPass] ${message}`, obj);\nconst logError = (message, obj = null) => logger_1.default.error(`[useCivicPass] ${message}`, obj);\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst getCivicPassSrcUrl = (state, status) => {\n    const { redirectUrl, gatekeeperNetworkAddress, stage, walletAddress, civicPass, chainType } = state;\n    if (!gatekeeperNetworkAddress || !walletAddress) {\n        logError('Required properties not present', { gatekeeperNetworkAddress, walletAddress });\n        throw new Error(`Required properties not present ${{ gatekeeperNetworkAddress, walletAddress }}`);\n    }\n    const civicPassSrcUrl = (0, config_1.getCivicPassEndpoint)(stage);\n    const url = new URL(civicPassSrcUrl);\n    const action = gatewayStatusToCivicPassAction[status];\n    const searchParams = new URLSearchParams(Object.assign(Object.assign({}, civicPass.requestPayload), { redirectUrl, networkAddress: gatekeeperNetworkAddress, action, wallet: walletAddress, chain: chainType }));\n    logDebug('Civic pass query params', { searchParams: searchParams.toString(), gatewayStatus: types_1.GatewayStatus[status] });\n    return `${url.href}?${searchParams.toString()}`;\n};\nconst reducer = (state, action) => {\n    var _a;\n    switch (action.type) {\n        case 'civicPass_check_token_status': {\n            return Object.assign(Object.assign({}, state), { tokenRequested: true, iframeMinimized: !((_a = state.options) === null || _a === void 0 ? void 0 : _a.autoShowModal), renderIframe: true, iframeSrcUrl: state.civicPass.status === types_1.CivicPassIssuanceStatus.REQUESTED\n                    ? state.iframeSrcUrl\n                    : getCivicPassSrcUrl(state, (0, utils_1.statusFromToken)(state, action.token)) });\n        }\n        case 'civicPass_check_status': {\n            return Object.assign(Object.assign({}, state), { iframeMinimized: true, renderIframe: true, gatewayStatus: types_1.GatewayStatus.CHECKING, iframeSrcUrl: getCivicPassSrcUrl(state, types_1.GatewayStatus.CHECKING) });\n        }\n        case 'civicPass_check_status_complete': {\n            const { payload } = action.payload;\n            const { status } = payload;\n            const gatewayStatus = validationProcessToGatewayStatus[status];\n            return Object.assign(Object.assign({}, state), { iframeMinimized: true, renderIframe: false, gatewayStatus });\n        }\n        case 'userInteraction_check_gatewayToken_status': {\n            return Object.assign(Object.assign({}, state), { tokenRequested: true, iframeMinimized: false, renderIframe: true, iframeSrcUrl: state.civicPass.status === types_1.CivicPassIssuanceStatus.REQUESTED\n                    ? state.iframeSrcUrl\n                    : getCivicPassSrcUrl(state, (0, utils_1.statusFromToken)(state, action.token)) });\n        }\n        case 'civicPass_close':\n            return Object.assign({}, (state.civicPass.status === types_1.CivicPassIssuanceStatus.REQUESTED\n                ? Object.assign(Object.assign({}, state), { iframeMinimized: true, renderIframe: true }) : Object.assign(Object.assign({}, state), { iframeMinimized: true, renderIframe: false })));\n        case 'civicPass_in_progress': {\n            return Object.assign(Object.assign({}, state), { gatewayStatus: types_1.GatewayStatus.COLLECTING_USER_INFORMATION, renderIframe: true, iframeMinimized: false, civicPass: Object.assign(Object.assign({}, state.civicPass), { status: types_1.CivicPassIssuanceStatus.REQUESTED }) });\n        }\n        case 'civicPass_issuance_success': {\n            const { payload, requiresProofOfWalletOwnership } = action.payload;\n            const gatewayStatus = requiresProofOfWalletOwnership\n                ? types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP\n                : types_1.GatewayStatus.IN_REVIEW;\n            return Object.assign(Object.assign({}, state), { gatewayStatus, renderIframe: true, iframeMinimized: false, powoRequested: 'solana', iframeSrcUrl: getCivicPassSrcUrl(state, gatewayStatus), civicPass: Object.assign(Object.assign({}, state.civicPass), { status: types_1.CivicPassIssuanceStatus.VERIFIED, responsePayload: {\n                        [types_1.CivicPassMessageAction.ISSUANCE]: {\n                            payload,\n                            requiresProofOfWalletOwnership,\n                        },\n                    } }) });\n        }\n        case 'civicPass_issuance_failure':\n            return Object.assign(Object.assign({}, (0, utils_1.resetState)(state)), { gatewayStatus: types_1.GatewayStatus.ERROR });\n        case 'civicPass_issuance_cancelled':\n            return Object.assign(Object.assign({}, (0, utils_1.resetState)(state)), { gatewayStatus: types_1.GatewayStatus.NOT_REQUESTED });\n        case 'civicPass_refresh_success': {\n            const { payload, requiresProofOfWalletOwnership } = action.payload;\n            const gatewayStatus = requiresProofOfWalletOwnership\n                ? types_1.GatewayStatus.PROOF_OF_WALLET_OWNERSHIP\n                : types_1.GatewayStatus.IN_REVIEW;\n            return Object.assign(Object.assign({}, state), { gatewayStatus, renderIframe: true, iframeMinimized: false, iframeSrcUrl: getCivicPassSrcUrl(state, gatewayStatus), refreshTokenState: types_1.RefreshTokenState.IN_PROGRESS, civicPass: Object.assign(Object.assign({}, state.civicPass), { responsePayload: {\n                        [types_1.CivicPassMessageAction.REFRESH]: {\n                            payload,\n                            requiresProofOfWalletOwnership,\n                        },\n                    } }) });\n        }\n        case 'civicPass_refresh_cancelled':\n            return Object.assign(Object.assign({}, (0, utils_1.resetState)(state)), { refreshTokenState: types_1.RefreshTokenState.CANCELLED, gatewayStatus: types_1.GatewayStatus.REFRESH_TOKEN_REQUIRED });\n        case 'civicPass_refresh_failure':\n            return Object.assign(Object.assign({}, (0, utils_1.resetState)(state)), { refreshTokenState: types_1.RefreshTokenState.FAILED, gatewayStatus: types_1.GatewayStatus.ERROR });\n        case 'civicPass_location_not_supported':\n            return Object.assign(Object.assign({}, state), { iframeMinimized: true, renderIframe: false, gatewayStatus: state.gatewayStatus, refreshTokenState: state.gatekeeperRecordState === types_1.GatekeeperRecordState.ISSUED_LOCATION_NOT_SUPPORTED\n                    ? types_1.RefreshTokenState.REQUIRES_POWO\n                    : state.refreshTokenState });\n        default:\n            return state;\n    }\n};\nexports.reducer = reducer;\nconst useCivicPass = ({ wallet }, state, dispatch) => {\n    const { gatekeeperRecordState } = state;\n    const getActionForIssuanceResponse = (response) => {\n        const actions = {\n            [types_1.CivicPassMessageEventResult.SUCCESS]: {\n                type: 'civicPass_issuance_success',\n                payload: response,\n            },\n            [types_1.CivicPassMessageEventResult.FAILURE]: {\n                type: 'civicPass_issuance_failure',\n            },\n            [types_1.CivicPassMessageEventResult.CANCELLED]: {\n                type: 'civicPass_issuance_cancelled',\n            },\n            [types_1.CivicPassMessageEventResult.IN_PROGRESS]: {\n                type: 'civicPass_in_progress',\n            },\n        };\n        return actions[response.event];\n    };\n    const getActionForRefreshResponse = (response) => {\n        const actions = {\n            [types_1.CivicPassMessageEventResult.SUCCESS]: {\n                type: 'civicPass_refresh_success',\n                payload: response,\n            },\n            [types_1.CivicPassMessageEventResult.CANCELLED]: {\n                type: 'civicPass_refresh_cancelled',\n            },\n            [types_1.CivicPassMessageEventResult.FAILURE]: {\n                type: 'civicPass_refresh_failure',\n            },\n        };\n        return actions[response.event];\n    };\n    const getActionForPowoResponse = (response) => {\n        const actions = {\n            [types_1.CivicPassMessageEventResult.SUCCESS]: {\n                type: 'powoComplete',\n            },\n        };\n        return actions[response.event];\n    };\n    const getActionForLocationNotSupportedResponse = (response) => {\n        const actions = {\n            [types_1.CivicPassMessageEventResult.SUCCESS]: {\n                type: 'civicPass_location_not_supported',\n            },\n        };\n        return actions[response.event];\n    };\n    const getActionForStaticResponse = (response) => {\n        const actions = {\n            [types_1.CivicPassMessageEventResult.SUCCESS]: {\n                type: 'civicPass_close',\n            },\n        };\n        return actions[response.event];\n    };\n    const getActionForStatusResponse = (response) => {\n        const actions = {\n            [types_1.CivicPassMessageEventResult.SUCCESS]: {\n                type: 'civicPass_check_status_complete',\n                payload: response,\n            },\n        };\n        return actions[response.event];\n    };\n    const dispatchComplianceEventResult = (response) => {\n        const actions = {\n            [types_1.CivicPassMessageAction.ISSUANCE]: getActionForIssuanceResponse(response),\n            [types_1.CivicPassMessageAction.PROOF_OF_WALLET_OWNERSHIP]: getActionForPowoResponse(response),\n            [types_1.CivicPassMessageAction.TOKEN_IN_REVIEW]: getActionForStaticResponse(response),\n            [types_1.CivicPassMessageAction.TOKEN_ACTIVE]: getActionForStaticResponse(response),\n            [types_1.CivicPassMessageAction.TOKEN_FROZEN]: getActionForStaticResponse(response),\n            [types_1.CivicPassMessageAction.TOKEN_REJECTED]: getActionForStaticResponse(response),\n            [types_1.CivicPassMessageAction.TOKEN_REVOKED]: getActionForStaticResponse(response),\n            [types_1.CivicPassMessageAction.FAILED_IP_CHECK]: getActionForLocationNotSupportedResponse(response),\n            [types_1.CivicPassMessageAction.REFRESH]: getActionForRefreshResponse(response),\n            [types_1.CivicPassMessageAction.STATUS]: getActionForStatusResponse(response),\n        };\n        const action = actions[response.action];\n        if (action) {\n            logDebug('Successfully processed compliance event with action', action);\n            dispatch(action);\n        }\n    };\n    /**\n     * Listen for post messages from the compliance iframe and dispatch events\n     * based on the event type\n     */\n    (0, react_1.useEffect)(() => {\n        if (wallet && wallet.publicKey) {\n            logDebug('Current state', state);\n            const handler = async (response) => {\n                dispatchComplianceEventResult(response.data);\n            };\n            window.addEventListener('message', handler);\n            return () => {\n                logDebug('Removing event listener for compliance');\n                return window.removeEventListener('message', handler);\n            };\n        }\n        return () => { };\n    }, []);\n    /**\n     * We do not have a token and user is connecting from an unsupported country,\n     * so we show the country not supported screen\n     */\n    (0, react_1.useEffect)(() => {\n        if (gatekeeperRecordState === types_1.GatekeeperRecordState.LOCATION_NOT_SUPPORTED) {\n            dispatch({ type: 'civicPass_check_token_status' });\n        }\n    }, [gatekeeperRecordState]);\n    /**\n     * Check for the ongoing KYC status\n     */\n    (0, react_1.useEffect)(() => {\n        if (gatekeeperRecordState === types_1.GatekeeperRecordState.NOT_REQUESTED) {\n            dispatch({ type: 'civicPass_check_status' });\n        }\n    }, [gatekeeperRecordState]);\n    return { dispatchComplianceEventResult };\n};\nexports.default = useCivicPass;\n"]},"metadata":{},"sourceType":"script"}